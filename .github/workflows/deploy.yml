name: Deploy to AWS Lambda

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: iphonestockbot
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

    - name: Update Lambda function
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: iphonestockbot
        IMAGE_TAG: ${{ github.sha }}
      run: |
        aws lambda update-function-code \
          --function-name iPhoneStockBot \
          --image-uri $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Send Telegram notification
      if: success()
      env:
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        TELEGRAM_CHAT_IDS: ${{ secrets.TELEGRAM_CHAT_IDS }}
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: iphonestockbot
        IMAGE_TAG: ${{ github.sha }}
      run: |
        COMMIT_SHA="${{ github.sha }}"
        COMMIT_MSG_RAW="${{ github.event.head_commit.message }}"
        REPO_NAME="${{ github.repository }}"
        ACTOR="${{ github.actor }}"

        # Escape special characters for Markdown and URL encoding
        COMMIT_MSG=$(echo "$COMMIT_MSG_RAW" | sed 's/[_*[\]()~`>#+=|{}.!-]/\\&/g' | head -n1)

        MESSAGE="🚀 **Deployment Successful**%0A%0A📦 **ECR Image Pushed**%0A🏷️ Tag: \`${IMAGE_TAG}\`%0A🖼️ Registry: \`${ECR_REGISTRY}/${ECR_REPOSITORY}\`%0A%0A⚡ **Lambda Updated**%0A🔧 Function: \`iPhoneStockBot\`%0A%0A📝 **Commit Details**%0A👤 Author: ${ACTOR}%0A💬 Message: ${COMMIT_MSG}%0A🔗 [View Commit](https://github.com/${REPO_NAME}/commit/${COMMIT_SHA})"

        # Parse JSON array of chat IDs and send to each
        echo "${TELEGRAM_CHAT_IDS}" | jq -r '.[]' | while read -r CHAT_ID; do
          curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
            -d "chat_id=${CHAT_ID}" \
            -d "parse_mode=Markdown" \
            -d "disable_web_page_preview=true" \
            -d "text=${MESSAGE}"
        done
